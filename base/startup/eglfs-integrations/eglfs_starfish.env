# Copyright (c) 2023-2024 LG Electronics, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

# Defaults
[ -z "$QT_QPA_EGLFS_FB" ] && export QT_QPA_EGLFS_FB=/dev/fb0:/dev/fb1

# Get framebuffer name
IFS=:
set -- $QT_QPA_EGLFS_FB
unset IFS

primary_name="${1#/dev/}"
[ -z "$primary_name" ] && pmlog err "Failed to read primary name"

secondary_name="${2#/dev/}"

# Get framebuffer geometry/resolution of primary window
primary_geometry="$( \
luna-send -n 1 -a com.webos.surfacemanager luna://com.webos.service.config/getConfigs \
    '{"configNames":["com.webos.surfacemanager.compositorGeometry"]}' \
| grep -oE "[0-9]+x[0-9]+[\+\-][0-9]+[\+\-][0-9]+r[0-9]+s[0-9]+\.?[0-9]*" \
|| printf "1920x1080+0+0r0s1")"

primary_resolution="${primary_geometry%[-+]?*[-+]?*r?*s?*}"
[ -z "$primary_resolution" ] && pmlog err "Failed to read primary resolution"

# Set display config for primary window
WEBOS_COMPOSITOR_DISPLAY_CONFIG="$(printf \
'[{"device":"/dev/dri/card0","hwcursor":false,"connector":{"mode":"%s"},"outputs":[{"name":"%s","geometry":"%s","format":"%s","primary":true}' \
"$primary_resolution" "$primary_name" "$primary_geometry" "$WEBOS_DRM_FORMAT")"

# Set display config for secondary window
if [ "$WEBOS_COMPOSITOR_DISPLAYS" -eq 1 ]; then
    WEBOS_COMPOSITOR_DISPLAY_CONFIG="$(printf '%s]}]' "$WEBOS_COMPOSITOR_DISPLAY_CONFIG")"
else
    # Set config for extra window
    extra_config="$( \
        luna-send -n 1 -a com.webos.surfacemanager luna://com.webos.service.config/getConfigs \
        '{"configNames":["com.webos.surfacemanager.compositorExtraWindows"]}' \
        | grep -oE "\[\{.*\}\]")"

    if [ -z "$extra_config" ]; then
        pmlog err 'Failed to get config of "com.webos.surfacemanager.compositorExtraWindows"'
        extra_config="$WEBOS_DEFAULT_COMPOSITOR_EXTRA_WINDOWS"
    fi

    export WEBOS_COMPOSITOR_EXTRA_WINDOWS="$extra_config"

    # Set dipslay config for secondary window
    [ -z "${secondary_name}" ] && pmlog err "Failed to read secondary name"

    secondary_geometry="$( \
        printf "$extra_config" \
        | grep -oE "[0-9]+x[0-9]+[\+\-][0-9]+[\+\-][0-9]+r[0-9]+s[0-9]+\.?[0-9]*")"
    [ -z "${secondary_geometry}" ] && pmlog err "Failed to read secondary geometry"

    WEBOS_COMPOSITOR_DISPLAY_CONFIG="$(printf \
        '%s,{"name":"%s","geometry":"%s","format":"%s"}]}]' \
        "$WEBOS_COMPOSITOR_DISPLAY_CONFIG" "$secondary_name" "$secondary_geometry "$WEBOS_DRM_FORMAT"")"
fi

# Create DRM config file
export QT_QPA_EGLFS_CONFIG="$XDG_RUNTIME_DIR/surface-manager.eglfs.json"
printf "$WEBOS_COMPOSITOR_DISPLAY_CONFIG" >"$QT_QPA_EGLFS_CONFIG"

# Set other QPA environment variables
export QT_QPA_EGLFS_KMS_ATOMIC=1
export QT_QPA_EGLFS_DISABLE_INPUT=1
